/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2014-07-22 21:53:01 UTC)
 * on 2014-10-16 at 06:19:39 UTC 
 * Modify at your own risk.
 */

package com.gcm.locationlistenerendpoint;

/**
 * Service definition for Locationlistenerendpoint (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link LocationlistenerendpointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Locationlistenerendpoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.18.0-rc of the locationlistenerendpoint library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://sinuous-moment-658.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "locationlistenerendpoint/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Locationlistenerendpoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Locationlistenerendpoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "alertPeople".
   *
   * This request holds the parameters needed by the locationlistenerendpoint server.  After setting
   * any optional parameters, call the {@link AlertPeople#execute()} method to invoke the remote
   * operation.
   *
   * @param message
   * @param subject
   * @param type
   * @param latitude
   * @param longitude
   * @param time
   * @return the request
   */
  public AlertPeople alertPeople(java.lang.String message, java.lang.String subject, java.lang.String type, java.lang.Double latitude, java.lang.Double longitude, java.lang.Long time) throws java.io.IOException {
    AlertPeople result = new AlertPeople(message, subject, type, latitude, longitude, time);
    initialize(result);
    return result;
  }

  public class AlertPeople extends LocationlistenerendpointRequest<com.gcm.locationlistenerendpoint.model.StringCollection> {

    private static final String REST_PATH = "alertPeople/{message}/{subject}/{type}/{latitude}/{longitude}/{time}";

    /**
     * Create a request for the method "alertPeople".
     *
     * This request holds the parameters needed by the the locationlistenerendpoint server.  After
     * setting any optional parameters, call the {@link AlertPeople#execute()} method to invoke the
     * remote operation. <p> {@link
     * AlertPeople#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param message
     * @param subject
     * @param type
     * @param latitude
     * @param longitude
     * @param time
     * @since 1.13
     */
    protected AlertPeople(java.lang.String message, java.lang.String subject, java.lang.String type, java.lang.Double latitude, java.lang.Double longitude, java.lang.Long time) {
      super(Locationlistenerendpoint.this, "POST", REST_PATH, null, com.gcm.locationlistenerendpoint.model.StringCollection.class);
      this.message = com.google.api.client.util.Preconditions.checkNotNull(message, "Required parameter message must be specified.");
      this.subject = com.google.api.client.util.Preconditions.checkNotNull(subject, "Required parameter subject must be specified.");
      this.type = com.google.api.client.util.Preconditions.checkNotNull(type, "Required parameter type must be specified.");
      this.latitude = com.google.api.client.util.Preconditions.checkNotNull(latitude, "Required parameter latitude must be specified.");
      this.longitude = com.google.api.client.util.Preconditions.checkNotNull(longitude, "Required parameter longitude must be specified.");
      this.time = com.google.api.client.util.Preconditions.checkNotNull(time, "Required parameter time must be specified.");
    }

    @Override
    public AlertPeople setAlt(java.lang.String alt) {
      return (AlertPeople) super.setAlt(alt);
    }

    @Override
    public AlertPeople setFields(java.lang.String fields) {
      return (AlertPeople) super.setFields(fields);
    }

    @Override
    public AlertPeople setKey(java.lang.String key) {
      return (AlertPeople) super.setKey(key);
    }

    @Override
    public AlertPeople setOauthToken(java.lang.String oauthToken) {
      return (AlertPeople) super.setOauthToken(oauthToken);
    }

    @Override
    public AlertPeople setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AlertPeople) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AlertPeople setQuotaUser(java.lang.String quotaUser) {
      return (AlertPeople) super.setQuotaUser(quotaUser);
    }

    @Override
    public AlertPeople setUserIp(java.lang.String userIp) {
      return (AlertPeople) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String message;

    /**

     */
    public java.lang.String getMessage() {
      return message;
    }

    public AlertPeople setMessage(java.lang.String message) {
      this.message = message;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String subject;

    /**

     */
    public java.lang.String getSubject() {
      return subject;
    }

    public AlertPeople setSubject(java.lang.String subject) {
      this.subject = subject;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String type;

    /**

     */
    public java.lang.String getType() {
      return type;
    }

    public AlertPeople setType(java.lang.String type) {
      this.type = type;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double latitude;

    /**

     */
    public java.lang.Double getLatitude() {
      return latitude;
    }

    public AlertPeople setLatitude(java.lang.Double latitude) {
      this.latitude = latitude;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double longitude;

    /**

     */
    public java.lang.Double getLongitude() {
      return longitude;
    }

    public AlertPeople setLongitude(java.lang.Double longitude) {
      this.longitude = longitude;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long time;

    /**

     */
    public java.lang.Long getTime() {
      return time;
    }

    public AlertPeople setTime(java.lang.Long time) {
      this.time = time;
      return this;
    }

    @Override
    public AlertPeople set(String parameterName, Object value) {
      return (AlertPeople) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getLocationListener".
   *
   * This request holds the parameters needed by the locationlistenerendpoint server.  After setting
   * any optional parameters, call the {@link GetLocationListener#execute()} method to invoke the
   * remote operation.
   *
   * @param id
   * @return the request
   */
  public GetLocationListener getLocationListener(java.lang.Long id) throws java.io.IOException {
    GetLocationListener result = new GetLocationListener(id);
    initialize(result);
    return result;
  }

  public class GetLocationListener extends LocationlistenerendpointRequest<com.gcm.locationlistenerendpoint.model.LocationListener> {

    private static final String REST_PATH = "locationlistener/{id}";

    /**
     * Create a request for the method "getLocationListener".
     *
     * This request holds the parameters needed by the the locationlistenerendpoint server.  After
     * setting any optional parameters, call the {@link GetLocationListener#execute()} method to
     * invoke the remote operation. <p> {@link GetLocationListener#initialize(com.google.api.client.go
     * ogleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetLocationListener(java.lang.Long id) {
      super(Locationlistenerendpoint.this, "GET", REST_PATH, null, com.gcm.locationlistenerendpoint.model.LocationListener.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetLocationListener setAlt(java.lang.String alt) {
      return (GetLocationListener) super.setAlt(alt);
    }

    @Override
    public GetLocationListener setFields(java.lang.String fields) {
      return (GetLocationListener) super.setFields(fields);
    }

    @Override
    public GetLocationListener setKey(java.lang.String key) {
      return (GetLocationListener) super.setKey(key);
    }

    @Override
    public GetLocationListener setOauthToken(java.lang.String oauthToken) {
      return (GetLocationListener) super.setOauthToken(oauthToken);
    }

    @Override
    public GetLocationListener setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetLocationListener) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetLocationListener setQuotaUser(java.lang.String quotaUser) {
      return (GetLocationListener) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetLocationListener setUserIp(java.lang.String userIp) {
      return (GetLocationListener) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetLocationListener setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetLocationListener set(String parameterName, Object value) {
      return (GetLocationListener) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertLocationListener".
   *
   * This request holds the parameters needed by the locationlistenerendpoint server.  After setting
   * any optional parameters, call the {@link InsertLocationListener#execute()} method to invoke the
   * remote operation.
   *
   * @param content the {@link com.gcm.locationlistenerendpoint.model.LocationListener}
   * @return the request
   */
  public InsertLocationListener insertLocationListener(com.gcm.locationlistenerendpoint.model.LocationListener content) throws java.io.IOException {
    InsertLocationListener result = new InsertLocationListener(content);
    initialize(result);
    return result;
  }

  public class InsertLocationListener extends LocationlistenerendpointRequest<com.gcm.locationlistenerendpoint.model.LocationListener> {

    private static final String REST_PATH = "locationlistener";

    /**
     * Create a request for the method "insertLocationListener".
     *
     * This request holds the parameters needed by the the locationlistenerendpoint server.  After
     * setting any optional parameters, call the {@link InsertLocationListener#execute()} method to
     * invoke the remote operation. <p> {@link InsertLocationListener#initialize(com.google.api.client
     * .googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.gcm.locationlistenerendpoint.model.LocationListener}
     * @since 1.13
     */
    protected InsertLocationListener(com.gcm.locationlistenerendpoint.model.LocationListener content) {
      super(Locationlistenerendpoint.this, "POST", REST_PATH, content, com.gcm.locationlistenerendpoint.model.LocationListener.class);
    }

    @Override
    public InsertLocationListener setAlt(java.lang.String alt) {
      return (InsertLocationListener) super.setAlt(alt);
    }

    @Override
    public InsertLocationListener setFields(java.lang.String fields) {
      return (InsertLocationListener) super.setFields(fields);
    }

    @Override
    public InsertLocationListener setKey(java.lang.String key) {
      return (InsertLocationListener) super.setKey(key);
    }

    @Override
    public InsertLocationListener setOauthToken(java.lang.String oauthToken) {
      return (InsertLocationListener) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertLocationListener setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertLocationListener) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertLocationListener setQuotaUser(java.lang.String quotaUser) {
      return (InsertLocationListener) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertLocationListener setUserIp(java.lang.String userIp) {
      return (InsertLocationListener) super.setUserIp(userIp);
    }

    @Override
    public InsertLocationListener set(String parameterName, Object value) {
      return (InsertLocationListener) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeLocationListener".
   *
   * This request holds the parameters needed by the locationlistenerendpoint server.  After setting
   * any optional parameters, call the {@link RemoveLocationListener#execute()} method to invoke the
   * remote operation.
   *
   * @param id
   * @return the request
   */
  public RemoveLocationListener removeLocationListener(java.lang.Long id) throws java.io.IOException {
    RemoveLocationListener result = new RemoveLocationListener(id);
    initialize(result);
    return result;
  }

  public class RemoveLocationListener extends LocationlistenerendpointRequest<Void> {

    private static final String REST_PATH = "locationlistener/{id}";

    /**
     * Create a request for the method "removeLocationListener".
     *
     * This request holds the parameters needed by the the locationlistenerendpoint server.  After
     * setting any optional parameters, call the {@link RemoveLocationListener#execute()} method to
     * invoke the remote operation. <p> {@link RemoveLocationListener#initialize(com.google.api.client
     * .googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveLocationListener(java.lang.Long id) {
      super(Locationlistenerendpoint.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveLocationListener setAlt(java.lang.String alt) {
      return (RemoveLocationListener) super.setAlt(alt);
    }

    @Override
    public RemoveLocationListener setFields(java.lang.String fields) {
      return (RemoveLocationListener) super.setFields(fields);
    }

    @Override
    public RemoveLocationListener setKey(java.lang.String key) {
      return (RemoveLocationListener) super.setKey(key);
    }

    @Override
    public RemoveLocationListener setOauthToken(java.lang.String oauthToken) {
      return (RemoveLocationListener) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveLocationListener setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveLocationListener) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveLocationListener setQuotaUser(java.lang.String quotaUser) {
      return (RemoveLocationListener) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveLocationListener setUserIp(java.lang.String userIp) {
      return (RemoveLocationListener) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveLocationListener setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveLocationListener set(String parameterName, Object value) {
      return (RemoveLocationListener) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateLocationListener".
   *
   * This request holds the parameters needed by the locationlistenerendpoint server.  After setting
   * any optional parameters, call the {@link UpdateLocationListener#execute()} method to invoke the
   * remote operation.
   *
   * @param content the {@link com.gcm.locationlistenerendpoint.model.LocationListener}
   * @return the request
   */
  public UpdateLocationListener updateLocationListener(com.gcm.locationlistenerendpoint.model.LocationListener content) throws java.io.IOException {
    UpdateLocationListener result = new UpdateLocationListener(content);
    initialize(result);
    return result;
  }

  public class UpdateLocationListener extends LocationlistenerendpointRequest<com.gcm.locationlistenerendpoint.model.LocationListener> {

    private static final String REST_PATH = "locationlistener";

    /**
     * Create a request for the method "updateLocationListener".
     *
     * This request holds the parameters needed by the the locationlistenerendpoint server.  After
     * setting any optional parameters, call the {@link UpdateLocationListener#execute()} method to
     * invoke the remote operation. <p> {@link UpdateLocationListener#initialize(com.google.api.client
     * .googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.gcm.locationlistenerendpoint.model.LocationListener}
     * @since 1.13
     */
    protected UpdateLocationListener(com.gcm.locationlistenerendpoint.model.LocationListener content) {
      super(Locationlistenerendpoint.this, "PUT", REST_PATH, content, com.gcm.locationlistenerendpoint.model.LocationListener.class);
    }

    @Override
    public UpdateLocationListener setAlt(java.lang.String alt) {
      return (UpdateLocationListener) super.setAlt(alt);
    }

    @Override
    public UpdateLocationListener setFields(java.lang.String fields) {
      return (UpdateLocationListener) super.setFields(fields);
    }

    @Override
    public UpdateLocationListener setKey(java.lang.String key) {
      return (UpdateLocationListener) super.setKey(key);
    }

    @Override
    public UpdateLocationListener setOauthToken(java.lang.String oauthToken) {
      return (UpdateLocationListener) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateLocationListener setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateLocationListener) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateLocationListener setQuotaUser(java.lang.String quotaUser) {
      return (UpdateLocationListener) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateLocationListener setUserIp(java.lang.String userIp) {
      return (UpdateLocationListener) super.setUserIp(userIp);
    }

    @Override
    public UpdateLocationListener set(String parameterName, Object value) {
      return (UpdateLocationListener) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Locationlistenerendpoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Locationlistenerendpoint}. */
    @Override
    public Locationlistenerendpoint build() {
      return new Locationlistenerendpoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link LocationlistenerendpointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setLocationlistenerendpointRequestInitializer(
        LocationlistenerendpointRequestInitializer locationlistenerendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(locationlistenerendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
